/*!
 /file Manipulator.h
 /brief File containing definition of \a Manipulator class, which is used to simulate the manipulator in both Autonomous and Periodic modes with no waste of memory.
 /authors Matthew Haney, Drew Lazzeri
 
 */

#ifndef _RJHS_FRC_2011_MANIPULATOR_H_
#define _RJHS_FRC_2011_MANIPULATOR_H_

namespace RJFRC2011
{
	class Manipulator
	{
	private:
		//! Forwards/backwards relay controlling motion of the top arm of the manipulator
		Relay * manipulatorTop;
		//! Forwards/backwards relay controlling motion of the bottom arm of the manipulator
		Relay * manipulatorBottom;
		//! Forwards/backwards relay controlling position of the manipulator
		Relay * manipulatorElevation;
		
		//! Limit switch at the bottom of the manipulator elevator
		DigitalInput * manipulatorElevationBottomLimitSwitch;
		//! Limit switch at the top of the manipulator elevator
		DigitalInput * manipulatorElevationTopLimitSwitch;
	public:
		Manipulator();
		~Manipulator();
		void inputTube();
		void rotateTube(float rotateTime = 0.75);
		void ejectTube();
		void elevate(float val); 
		void stopManipulatorAction();
		void stopManipulatorElevation();
	};
};

#endif